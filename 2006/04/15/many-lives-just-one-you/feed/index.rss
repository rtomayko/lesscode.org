<?xml version="1.0" encoding="UTF-8"?><!-- generator="wordpress/2.0.1" -->
<rss version="2.0" 
	xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
	<title>Comments on: Many Lives &#8212; Just One You</title>
	<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/</link>
	<description>AAaaaaahhhhrrrrrrr!</description>
	<pubDate>Mon, 17 Sep 2007 09:10:47 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.0.1</generator>

	<item>
		<title>by: Jef</title>
		<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1813</link>
		<pubDate>Wed, 26 Apr 2006 03:35:34 +0000</pubDate>
		<guid>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1813</guid>
					<description>&lt;p&gt;OK, Bill, I [think I] get it after reading it. I actually want to build something like this for my lowly li'l windoze mosheen, but more like a personal profile. I understand that it isn't a problem on a mac, but on my machine, I have a bunch of crazy things that happen at start up that take way longer than they should. I would really like to log in as the &quot;information worker me,&quot; or the &quot;developer me,&quot; or the &quot;web browsing me,&quot; and I would like the system to load only those pieces of software that I need and/or configure for that profile. I could create completely different user accounts, but then I run into the copy problem you mention. Maybe that should be what I work on for next time :)&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>OK, Bill, I [think I] get it after reading it. I actually want to build something like this for my lowly li&#8217;l windoze mosheen, but more like a personal profile. I understand that it isn&#8217;t a problem on a mac, but on my machine, I have a bunch of crazy things that happen at start up that take way longer than they should. I would really like to log in as the &#8220;information worker me,&#8221; or the &#8220;developer me,&#8221; or the &#8220;web browsing me,&#8221; and I would like the system to load only those pieces of software that I need and/or configure for that profile. I could create completely different user accounts, but then I run into the copy problem you mention. Maybe that should be what I work on for next time :)</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Brad</title>
		<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1654</link>
		<pubDate>Thu, 20 Apr 2006 17:04:04 +0000</pubDate>
		<guid>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1654</guid>
					<description>&lt;p&gt;Until then, what if I could at least store all of my user accounts somewhere.  I have spreadsheets at home &amp;#38; at work where I store them and then a few post-it notes in my desk with random credentials.  Something like what they're working on over at 7dots (&lt;a href=&quot;http://blog.7dots.com/articles/2005/12/24/what-is-7dots&quot; rel=&quot;&quot;&gt;http://blog.7dots.com/articles/2005/12/24/what-is-7dots&lt;/a&gt;) would help until the the consolidated user account idea is ironed out.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Until then, what if I could at least store all of my user accounts somewhere.  I have spreadsheets at home &amp; at work where I store them and then a few post-it notes in my desk with random credentials.  Something like what they&#8217;re working on over at 7dots (<a href="http://blog.7dots.com/articles/2005/12/24/what-is-7dots" rel="">http://blog.7dots.com/articles/2005/12/24/what-is-7dots</a>) would help until the the consolidated user account idea is ironed out.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Mark Allerton</title>
		<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1513</link>
		<pubDate>Mon, 17 Apr 2006 06:47:26 +0000</pubDate>
		<guid>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1513</guid>
					<description>&lt;p&gt;Alistair: the reason that it is &quot;relatively uncommon to select a primary group&quot; is that it is normally completely unnecessary - the entity you are acting on behalf of &lt;em&gt;is implicit in the operation you are performing&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In your example, how is an &quot;agent&quot; different from a regular group member? It seems to me that your scenario cannot work without the target system being able to determine a) I am who I say I am and b) that I am a technician from vendor X. You can't skip that first part - you have to be able to identify technicians even if their rights are only defined via their membership of a group. it's not enough for audit records to just say &quot;an anonymous technician from X did this&quot;. Is mentioning accountability too enterprise-y?&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Alistair: the reason that it is &#8220;relatively uncommon to select a primary group&#8221; is that it is normally completely unnecessary - the entity you are acting on behalf of <em>is implicit in the operation you are performing</em>.</p>
<p>In your example, how is an &#8220;agent&#8221; different from a regular group member? It seems to me that your scenario cannot work without the target system being able to determine a) I am who I say I am and b) that I am a technician from vendor X. You can&#8217;t skip that first part - you have to be able to identify technicians even if their rights are only defined via their membership of a group. it&#8217;s not enough for audit records to just say &#8220;an anonymous technician from X did this&#8221;. Is mentioning accountability too enterprise-y?</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Alastair</title>
		<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1512</link>
		<pubDate>Sun, 16 Apr 2006 22:58:52 +0000</pubDate>
		<guid>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1512</guid>
					<description>&lt;p&gt;Mark: if I understand it correctly, one of the key differences between group membership access control model and an agency-aware identity model is the fact that with the latter model you explicitly select which principal you are operating on behalf of. In my experience it is relatively uncommon to select a &quot;primary&quot; group in order to do something similar for a group membership model. This is possibly because the concept of a primary group is not well intuited amongst non-techy types. In general I think the idea of agency fits more naturally into our every day experience. Which, after all, is what we're striving for here.&lt;/p&gt;

&lt;p&gt;In any case I don't want to see these two models as alternatives. Instead I think they are quite complementary, such that an individual acting as an agent for some principal can be given group memberships, access control, and so on, based on the &lt;em&gt;agency&lt;/em&gt;. eg &quot;technicians from vendor X can connect to all of our equipment which are under support agreement from that vendor&quot; would define access for a group of agents (&quot;technicians from vendor X&quot;) without requiring identity of those technicians.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Mark: if I understand it correctly, one of the key differences between group membership access control model and an agency-aware identity model is the fact that with the latter model you explicitly select which principal you are operating on behalf of. In my experience it is relatively uncommon to select a &#8220;primary&#8221; group in order to do something similar for a group membership model. This is possibly because the concept of a primary group is not well intuited amongst non-techy types. In general I think the idea of agency fits more naturally into our every day experience. Which, after all, is what we&#8217;re striving for here.</p>
<p>In any case I don&#8217;t want to see these two models as alternatives. Instead I think they are quite complementary, such that an individual acting as an agent for some principal can be given group memberships, access control, and so on, based on the <em>agency</em>. eg &#8220;technicians from vendor X can connect to all of our equipment which are under support agreement from that vendor&#8221; would define access for a group of agents (&#8221;technicians from vendor X&#8221;) without requiring identity of those technicians.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Bill Burcham</title>
		<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1510</link>
		<pubDate>Sun, 16 Apr 2006 17:50:17 +0000</pubDate>
		<guid>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1510</guid>
					<description>&lt;p&gt;Mark: Don't be too quick to trivialize the content creation case.  The very notion of publishing to a &quot;where&quot; (&quot;&lt;em&gt;where&lt;/em&gt; I want to publish the content&quot;) &lt;a href=&quot;http://www.nizkor.org/features/fallacies/begging-the-question.html&quot; rel=&quot;&quot;&gt;begs the question&lt;/a&gt;.    Publishing to a &quot;where&quot; presumes that there are different &quot;where's&quot;.  The usual notion of a &quot;where&quot; is all bound up with notions of access control and protection and firewalling and separate systems.&lt;/p&gt;

&lt;p&gt;I for one, don't want to publish to a &quot;where&quot;.  Publishing to a &quot;where&quot; is where we are now.  You publish to a personal Internet-readable blog.  You publish to a corporate (Intranet) blog.  You'd like to use a blog-style interface to publish private information for yourself and perhaps &quot;syndicate&quot; it to various audiences later.  I'd like to separate the idea of audience from the idea of &quot;where&quot; and jettison the &quot;where&quot; notion entirely.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Mark: Don&#8217;t be too quick to trivialize the content creation case.  The very notion of publishing to a &#8220;where&#8221; (&#8221;<em>where</em> I want to publish the content&#8221;) <a href="http://www.nizkor.org/features/fallacies/begging-the-question.html" rel="">begs the question</a>.    Publishing to a &#8220;where&#8221; presumes that there are different &#8220;where&#8217;s&#8221;.  The usual notion of a &#8220;where&#8221; is all bound up with notions of access control and protection and firewalling and separate systems.</p>
<p>I for one, don&#8217;t want to publish to a &#8220;where&#8221;.  Publishing to a &#8220;where&#8221; is where we are now.  You publish to a personal Internet-readable blog.  You publish to a corporate (Intranet) blog.  You&#8217;d like to use a blog-style interface to publish private information for yourself and perhaps &#8220;syndicate&#8221; it to various audiences later.  I&#8217;d like to separate the idea of audience from the idea of &#8220;where&#8221; and jettison the &#8220;where&#8221; notion entirely.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Mark Allerton</title>
		<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1509</link>
		<pubDate>Sun, 16 Apr 2006 16:53:17 +0000</pubDate>
		<guid>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1509</guid>
					<description>&lt;p&gt;Bill: the Skype problem is more complex, but I think enterprise ID models suggest a solution to the QoS part at least - as well as rights, &lt;em&gt;quotas&lt;/em&gt; can be aggregated through the group  hierarchy. The rules are obviously more complex than the simple grant/deny/inherit needed for rights - does the quota &quot;sum&quot;, or is it the maximum or the minimum of inherited values? Are more complex rules needed? &lt;/p&gt;

&lt;p&gt;That said, I think your monitoring example does suggest a case where the principal needs to say on whose behalf they are working. Maybe something like agency is needed for these cases. I could imagine a case where there is a pre-existing relationship between the customer and the organization - in which case the customer becomes another object and their are rights and quotas associated with that relationship - but I might work for two organizations with the same customer so ultimately someone or something has to disambiguate - and that someone would be me (and you have to take my word for it as far as I can tell :-) )&lt;/p&gt;

&lt;p&gt;I still think the key to this is some kind of &quot;federated group membership&quot;, it would definitely deal with all of the &quot;content ownership&quot; problems which (I feel) are the core issue (the &quot;new content&quot; case I mention can be disambiguated by where I want to publish the content, BTW.)&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Bill: the Skype problem is more complex, but I think enterprise ID models suggest a solution to the QoS part at least - as well as rights, <em>quotas</em> can be aggregated through the group  hierarchy. The rules are obviously more complex than the simple grant/deny/inherit needed for rights - does the quota &#8220;sum&#8221;, or is it the maximum or the minimum of inherited values? Are more complex rules needed? </p>
<p>That said, I think your monitoring example does suggest a case where the principal needs to say on whose behalf they are working. Maybe something like agency is needed for these cases. I could imagine a case where there is a pre-existing relationship between the customer and the organization - in which case the customer becomes another object and their are rights and quotas associated with that relationship - but I might work for two organizations with the same customer so ultimately someone or something has to disambiguate - and that someone would be me (and you have to take my word for it as far as I can tell :-) )</p>
<p>I still think the key to this is some kind of &#8220;federated group membership&#8221;, it would definitely deal with all of the &#8220;content ownership&#8221; problems which (I feel) are the core issue (the &#8220;new content&#8221; case I mention can be disambiguated by where I want to publish the content, BTW.)</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Bill Burcham</title>
		<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1508</link>
		<pubDate>Sun, 16 Apr 2006 13:41:02 +0000</pubDate>
		<guid>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1508</guid>
					<description>&lt;p&gt;Like &lt;a href=&quot;http://markallerton.com/&quot; rel=&quot;&quot;&gt;Mark Allerton&lt;/a&gt;, I see how a set of enterprises, each having groups, forms a hierarchy, and how that hierarchy can be modeled by a permissions system supporting general-purpose hierarchy, and how a person can have permissions from more than one hierarchy.  I believe however, that there is more going on in real world agency.&lt;/p&gt;

&lt;p&gt;Turn aside from WikiGood for a moment.  Let's think about Skype.  Jessica has a (personal) Skype account that she's funded with real dollars to make &lt;a href=&quot;http://en.wikipedia.org/wiki/PSTN&quot; rel=&quot;&quot;&gt;PSTN&lt;/a&gt; calls in/out. Imagine that as part of her responsibilities at NowYouSeeIt she spends lots of time on the phone, so NowYouSeeIt provides her with a Skype account.  Two accounts, funded by two principals, with two very different usage volumes.  There is a difference in quality and quantity of service between these two roles that Jessica assumes.&lt;/p&gt;

&lt;p&gt;The Skype example feels very different to me than mere access control.  While we could argue that the &quot;funding account&quot; is just another &quot;object&quot; that can be access controlled, I think that's an oversimplification.  In the WikiGood example it was pretty easy to argue that all we needed to do was limit access to shared objects based on group membership.  But in the Skype example it feels like we'd have to replicate many of the structures associated with each user -- and link those structures under a single identity.&lt;/p&gt;

&lt;p&gt;Also think of the &quot;monitoring&quot; stuff that corporations want/need to do.  Again in the Skype example think of the familiar &quot;this call may be monitored for customer service&quot;.  Jessica wouldn't accept that for her personal calls -- but NowYouSeeIt may demand it for calls made on their behalf.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Like <a href="http://markallerton.com/" rel="">Mark Allerton</a>, I see how a set of enterprises, each having groups, forms a hierarchy, and how that hierarchy can be modeled by a permissions system supporting general-purpose hierarchy, and how a person can have permissions from more than one hierarchy.  I believe however, that there is more going on in real world agency.</p>
<p>Turn aside from WikiGood for a moment.  Let&#8217;s think about Skype.  Jessica has a (personal) Skype account that she&#8217;s funded with real dollars to make <a href="http://en.wikipedia.org/wiki/PSTN" rel="">PSTN</a> calls in/out. Imagine that as part of her responsibilities at NowYouSeeIt she spends lots of time on the phone, so NowYouSeeIt provides her with a Skype account.  Two accounts, funded by two principals, with two very different usage volumes.  There is a difference in quality and quantity of service between these two roles that Jessica assumes.</p>
<p>The Skype example feels very different to me than mere access control.  While we could argue that the &#8220;funding account&#8221; is just another &#8220;object&#8221; that can be access controlled, I think that&#8217;s an oversimplification.  In the WikiGood example it was pretty easy to argue that all we needed to do was limit access to shared objects based on group membership.  But in the Skype example it feels like we&#8217;d have to replicate many of the structures associated with each user &#8212; and link those structures under a single identity.</p>
<p>Also think of the &#8220;monitoring&#8221; stuff that corporations want/need to do.  Again in the Skype example think of the familiar &#8220;this call may be monitored for customer service&#8221;.  Jessica wouldn&#8217;t accept that for her personal calls &#8212; but NowYouSeeIt may demand it for calls made on their behalf.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Mark Allerton</title>
		<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1498</link>
		<pubDate>Sun, 16 Apr 2006 06:44:54 +0000</pubDate>
		<guid>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1498</guid>
					<description>&lt;p&gt;Alistair: Bill might be proposing for individuals to be in control of their identities. I support that goal and I agree that something like OpenID is really required for that. However, what Bill is describing over and above simple federated identity is no different to classic &quot;group membership&quot; and does not require a fancy new concept like &quot;agency&quot; to make it work.&lt;/p&gt;

&lt;p&gt;PS: the entity that gets to say whether an individual is working on behalf of someone else is not that individual - it's the &quot;someone else&quot;. That will not change however much I want to control my identity.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Alistair: Bill might be proposing for individuals to be in control of their identities. I support that goal and I agree that something like OpenID is really required for that. However, what Bill is describing over and above simple federated identity is no different to classic &#8220;group membership&#8221; and does not require a fancy new concept like &#8220;agency&#8221; to make it work.</p>
<p>PS: the entity that gets to say whether an individual is working on behalf of someone else is not that individual - it&#8217;s the &#8220;someone else&#8221;. That will not change however much I want to control my identity.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Pat Benetar's Secret Lover</title>
		<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1497</link>
		<pubDate>Sun, 16 Apr 2006 02:40:22 +0000</pubDate>
		<guid>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1497</guid>
					<description>&lt;p&gt;Why not have an application that acts as a storehouse of user data and as a server allowing outside applications (through web services) to access that data?  The user could run the storehouse/server on their home pc, or have a trusted entity host it for them.  The different external web applications could be authorized to access whatever data the user grants them, then offer up their view of the data and allow the user to manipulate it (think calendaring, todo lists, contact management, wishlists, etc).  &lt;/p&gt;

&lt;p&gt;I do not like giving my personal information to web applications.  I agree that a web application provides a great &quot;universal&quot; way of accessing/managing data, but I am more interested in what they can do with my data than in them having my data.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Why not have an application that acts as a storehouse of user data and as a server allowing outside applications (through web services) to access that data?  The user could run the storehouse/server on their home pc, or have a trusted entity host it for them.  The different external web applications could be authorized to access whatever data the user grants them, then offer up their view of the data and allow the user to manipulate it (think calendaring, todo lists, contact management, wishlists, etc).  </p>
<p>I do not like giving my personal information to web applications.  I agree that a web application provides a great &#8220;universal&#8221; way of accessing/managing data, but I am more interested in what they can do with my data than in them having my data.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Alastair</title>
		<link>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1496</link>
		<pubDate>Sat, 15 Apr 2006 23:32:33 +0000</pubDate>
		<guid>http://lesscode.org/2006/04/15/many-lives-just-one-you/#comment-1496</guid>
					<description>&lt;p&gt;I, for one, support our new Agency-Aware identity overlords.&lt;/p&gt;

&lt;p&gt;The trick is to ensure that the data associated with each principal is clearly identified, and that sounds mostly like a usability problem. You'd probably want the system to warn if you were leaking data from one agency to another (eg replying to a work email with your home address), for example.&lt;/p&gt;

&lt;p&gt;Also, the association of an individual to many agencies is highly private information. In an extreme example, I may not want anyone to know that I am both an agent for Exxon as well as an environmental activist. In other words the system should allow conflicts-of-interest and I think you alluded to this in the article above (&quot;perhaps you could work for more than one principal at a time&quot;).&lt;/p&gt;

&lt;p&gt;I think I disagree with Mark's comments above - what you are proposing is for individuals to be (largely) in control of their identities. This is not the case with enterprise identity models.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>I, for one, support our new Agency-Aware identity overlords.</p>
<p>The trick is to ensure that the data associated with each principal is clearly identified, and that sounds mostly like a usability problem. You&#8217;d probably want the system to warn if you were leaking data from one agency to another (eg replying to a work email with your home address), for example.</p>
<p>Also, the association of an individual to many agencies is highly private information. In an extreme example, I may not want anyone to know that I am both an agent for Exxon as well as an environmental activist. In other words the system should allow conflicts-of-interest and I think you alluded to this in the article above (&#8221;perhaps you could work for more than one principal at a time&#8221;).</p>
<p>I think I disagree with Mark&#8217;s comments above - what you are proposing is for individuals to be (largely) in control of their identities. This is not the case with enterprise identity models.</p>
]]></content:encoded>
				</item>
</channel>
</rss>

<!-- Dynamic Page Served (once) in 0.361 seconds -->
<!-- Cached page served by WP-Cache -->
