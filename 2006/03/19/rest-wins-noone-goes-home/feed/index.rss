<?xml version="1.0" encoding="UTF-8"?><!-- generator="wordpress/2.0.1" -->
<rss version="2.0" 
	xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
	<title>Comments on: REST wins, noone goes home</title>
	<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/</link>
	<description>AAaaaaahhhhrrrrrrr!</description>
	<pubDate>Mon, 17 Sep 2007 09:11:05 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.0.1</generator>

	<item>
		<title>by: S. Potter</title>
		<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-22184</link>
		<pubDate>Sat, 06 Jan 2007 00:18:46 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-22184</guid>
					<description>&lt;p&gt;As a former Java head turned Ruby evangelist I have to promote Ruby on Rails' latest offering of &lt;em&gt;ActiveResource&lt;/em&gt;, which is a forth coming component of the &lt;em&gt;Ruby on Rails&lt;/em&gt; stack.  The production version of Rails (1.1) already has ReSTian support for API and web producers.  However, ActiveResource will take ReSTian support one step further for REST consumers in addition to producers when the stable version is released shortly under Rails 1.2.  A Ruby on Rails plugin already exists for ReSTful authentication based on HTTP Basic (authentication under REST is very unfortunate, but the plugin author isn't to blame for the history of HTTP Authentication).&lt;/p&gt;

&lt;p&gt;I hope to add a blog entry later this weekend on my experiences with ReSTian Rails at &lt;a href=&quot;http://snakesgemscoffee.blogspot.com&quot; title=&quot;Ruby, Ruby on Rails vs. Java agile open source programming blog&quot; rel=&quot;&quot;&gt;&lt;strong&gt;Snakes, Gems &amp;#38; Coffee&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>As a former Java head turned Ruby evangelist I have to promote Ruby on Rails&#8217; latest offering of <em>ActiveResource</em>, which is a forth coming component of the <em>Ruby on Rails</em> stack.  The production version of Rails (1.1) already has ReSTian support for API and web producers.  However, ActiveResource will take ReSTian support one step further for REST consumers in addition to producers when the stable version is released shortly under Rails 1.2.  A Ruby on Rails plugin already exists for ReSTful authentication based on HTTP Basic (authentication under REST is very unfortunate, but the plugin author isn&#8217;t to blame for the history of HTTP Authentication).</p>
<p>I hope to add a blog entry later this weekend on my experiences with ReSTian Rails at <a href="http://snakesgemscoffee.blogspot.com" title="Ruby, Ruby on Rails vs. Java agile open source programming blog" rel=""><strong>Snakes, Gems &amp; Coffee</strong></a>.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: tndal</title>
		<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-20724</link>
		<pubDate>Sun, 17 Dec 2006 18:35:05 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-20724</guid>
					<description>&lt;p&gt;Ben Davies asks:
&quot;Say, for example, I GET an image from a REST service. I want to rotate that image by 90 degrees and then PUT it back. The Rotating part cannot be accomidated by REST? Is that correct? Is the PUT transfering the modified Resource, or am I passing a series of actions to be performed upon that Resource? Do I GET the image, rotate the image on the client, then PUT the image back? Or do I PUT a series of transformations to be performed on that resource?&quot;&lt;/p&gt;

&lt;p&gt;You could do a GET of the image resource followed by a PUT of the updated image resource, as you describe. &lt;/p&gt;

&lt;p&gt;Or you could define a separate associated resource for the image orientation and do a GET and PUT of that orientation resource.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Ben Davies asks:<br />
&#8220;Say, for example, I GET an image from a REST service. I want to rotate that image by 90 degrees and then PUT it back. The Rotating part cannot be accomidated by REST? Is that correct? Is the PUT transfering the modified Resource, or am I passing a series of actions to be performed upon that Resource? Do I GET the image, rotate the image on the client, then PUT the image back? Or do I PUT a series of transformations to be performed on that resource?&#8221;</p>
<p>You could do a GET of the image resource followed by a PUT of the updated image resource, as you describe. </p>
<p>Or you could define a separate associated resource for the image orientation and do a GET and PUT of that orientation resource.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Unilever Centre for Molecular Informatics, Cambridge - petermr&#8217;s blog &#187; Blog Archive &#187; The War on Error</title>
		<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-18990</link>
		<pubDate>Sat, 18 Nov 2006 17:48:26 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-18990</guid>
					<description>&lt;p&gt;[...] Last March: REST wins, noone goes home.Well, it looks like we&amp;#8217;re done. Which is worse, that everyone gets it now and we&amp;#8217;ll have REST startups in Q207, or that it took half a decade? [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] Last March: REST wins, noone goes home.Well, it looks like we&#8217;re done. Which is worse, that everyone gets it now and we&#8217;ll have REST startups in Q207, or that it took half a decade? [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Ben Davies</title>
		<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-8888</link>
		<pubDate>Thu, 24 Aug 2006 12:03:12 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-8888</guid>
					<description>&lt;p&gt;I've only recently been getting into REST, and I really dig it: clean, tidy, no sessions and simple authentication, moving all the &quot;management&quot; code of a site into Apache etc;&lt;/p&gt;

&lt;p&gt;I still havent found anyone address my concerns about &quot;acting&quot; on resources. If a REST service returns a resource, then from what I can make out from all I've read, using a web service like XML-RPC/SOAP would be used to perform an action on that resource. &lt;/p&gt;

&lt;p&gt;Say, for example, I GET an image from a REST service. I want to rotate that image by 90 degrees and then PUT it back. The Rotating part cannot be accomidated by REST? Is that correct? Is the PUT transfering the modified Resource, or am I passing a series of actions to be performed upon that Resource? Do I GET the image, rotate the image on the client, then PUT the image back? Or do I PUT a series of transformations to be performed on that resource?&lt;/p&gt;

&lt;p&gt;Each explanation I've seen for REST treats PUT as an SQL &quot;update&quot;, so in that sense, the second method is suggested (I only need to PUT a series of actions to perform) and is obviously a lot more light weight (I'm only passing the changes needed to be performed, not a copy of the updated resource). However, this means that each resource must be &quot;aware&quot; of the different transformations that can be made to it...&lt;/p&gt;

&lt;p&gt;I'd appreciate your thoughts!&lt;/p&gt;

&lt;p&gt;Oh, and I too would like to see a book from you guys!&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>I&#8217;ve only recently been getting into REST, and I really dig it: clean, tidy, no sessions and simple authentication, moving all the &#8220;management&#8221; code of a site into Apache etc;</p>
<p>I still havent found anyone address my concerns about &#8220;acting&#8221; on resources. If a REST service returns a resource, then from what I can make out from all I&#8217;ve read, using a web service like XML-RPC/SOAP would be used to perform an action on that resource. </p>
<p>Say, for example, I GET an image from a REST service. I want to rotate that image by 90 degrees and then PUT it back. The Rotating part cannot be accomidated by REST? Is that correct? Is the PUT transfering the modified Resource, or am I passing a series of actions to be performed upon that Resource? Do I GET the image, rotate the image on the client, then PUT the image back? Or do I PUT a series of transformations to be performed on that resource?</p>
<p>Each explanation I&#8217;ve seen for REST treats PUT as an SQL &#8220;update&#8221;, so in that sense, the second method is suggested (I only need to PUT a series of actions to perform) and is obviously a lot more light weight (I&#8217;m only passing the changes needed to be performed, not a copy of the updated resource). However, this means that each resource must be &#8220;aware&#8221; of the different transformations that can be made to it&#8230;</p>
<p>I&#8217;d appreciate your thoughts!</p>
<p>Oh, and I too would like to see a book from you guys!</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: christopher mahan</title>
		<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1346</link>
		<pubDate>Wed, 22 Mar 2006 09:42:31 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1346</guid>
					<description>&lt;p&gt;I too would like a good book on REST. a short book, with no screenshots. Maybe 30 pages would be great. Well written, I'd pay $30 for it.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>I too would like a good book on REST. a short book, with no screenshots. Maybe 30 pages would be great. Well written, I&#8217;d pay $30 for it.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Avi Flax</title>
		<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1317</link>
		<pubDate>Mon, 20 Mar 2006 17:53:21 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1317</guid>
					<description>&lt;blockquote&gt;
  &lt;p&gt;Certainly we need a few good practical books on REST/HTTP to ship.&lt;/p&gt;

  &lt;p&gt;At least one of those fine books should cover the fundamental principles of Web-centric development, the way Gamma et al did for C++ Patterns, Fowler did for Refactoring, or Norvig/Graham did for CLisp. Something that nails it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I nominate the lesscode.org team! Seriously, this is a great opportunity. There's an unserved demand for exactly such a book, and you and your colleagues are uniquely and especially qualified to fill it.&lt;/p&gt;

&lt;p&gt;Start tomorrow, offer a closed beta for pre-orders, release it as a DRM-free PDF eBook, charge $20 for rights to updates for a year or two, and &lt;strong&gt;I'm there!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I'm not kidding. What would it take to convince you? 50 pre-order pledges right here in the comments? 100? If you issue the challenge, I bet you'd get them. #1 right here.&lt;/p&gt;

&lt;p&gt;I think you could even make money with this. &lt;a href=&quot;http://37signals.com/&quot; rel=&quot;nofollow&quot;&gt;37signal's&lt;/a&gt; eBook &lt;a href=&quot;https://gettingreal.37signals.com/&quot;&gt;Getting Real&lt;/a&gt; &lt;a href=&quot;http://www.37signals.com/svn/archives2/getting_real_book_update_new_version_sales_feedback_contributors_etc.php&quot;&gt;brought in $33,000&lt;/a&gt; in the first 24 hours.&lt;/p&gt;

&lt;p&gt;If you put out the first definitive book on REST, that's a strong preemptive move against &lt;em&gt;The PR Problem&lt;/em&gt;.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<blockquote>
<p>Certainly we need a few good practical books on REST/HTTP to ship.</p>
<p>At least one of those fine books should cover the fundamental principles of Web-centric development, the way Gamma et al did for C++ Patterns, Fowler did for Refactoring, or Norvig/Graham did for CLisp. Something that nails it.</p>
</blockquote>
<p>I nominate the lesscode.org team! Seriously, this is a great opportunity. There&#8217;s an unserved demand for exactly such a book, and you and your colleagues are uniquely and especially qualified to fill it.</p>
<p>Start tomorrow, offer a closed beta for pre-orders, release it as a DRM-free PDF eBook, charge $20 for rights to updates for a year or two, and <strong>I&#8217;m there!</strong></p>
<p>I&#8217;m not kidding. What would it take to convince you? 50 pre-order pledges right here in the comments? 100? If you issue the challenge, I bet you&#8217;d get them. #1 right here.</p>
<p>I think you could even make money with this. <a href="http://37signals.com/">37signal&#8217;s</a> eBook <a href="https://gettingreal.37signals.com/">Getting Real</a> <a href="http://www.37signals.com/svn/archives2/getting_real_book_update_new_version_sales_feedback_contributors_etc.php">brought in $33,000</a> in the first 24 hours.</p>
<p>If you put out the first definitive book on REST, that&#8217;s a strong preemptive move against <em>The PR Problem</em>.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Mark Baker</title>
		<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1316</link>
		<pubDate>Mon, 20 Mar 2006 17:30:56 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1316</guid>
					<description>&lt;p&gt;I'm not too concerned, Ryan.  The definition of REST remains grounded in Roy's dissertation, unlike WS/SOA.  It's this &quot;Lo-REST&quot; and &quot;Hi-REST&quot; terminology which has me concerned, if they get any traction, becuase they aren't rigorously defined.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>I&#8217;m not too concerned, Ryan.  The definition of REST remains grounded in Roy&#8217;s dissertation, unlike WS/SOA.  It&#8217;s this &#8220;Lo-REST&#8221; and &#8220;Hi-REST&#8221; terminology which has me concerned, if they get any traction, becuase they aren&#8217;t rigorously defined.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: SitePoint Blogs &#187; WS-DeadParrot</title>
		<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1309</link>
		<pubDate>Mon, 20 Mar 2006 09:38:37 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1309</guid>
					<description>&lt;p&gt;[...] It&amp;#8217;s rant time again (apologies&amp;#8212;move along unless you&amp;#8217;re feeling fiesty). It&amp;#8217;s that REST vs. SOAP thing. There&amp;#8217;s another round of debate traversing various blogs. This time it seems to be SOAP&amp;#8217;s final death throes. If SOAP and all that makes little sense, know that you&amp;#8217;re not alone and that you can happily ignore it and focus on smarter options. [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] It&#8217;s rant time again (apologies&#8212;move along unless you&#8217;re feeling fiesty). It&#8217;s that REST vs. SOAP thing. There&#8217;s another round of debate traversing various blogs. This time it seems to be SOAP&#8217;s final death throes. If SOAP and all that makes little sense, know that you&#8217;re not alone and that you can happily ignore it and focus on smarter options. [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Jerome Louvel</title>
		<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1308</link>
		<pubDate>Mon, 20 Mar 2006 09:27:47 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1308</guid>
					<description>&lt;p&gt;For Java developers, a REST framework/toolkit already exists. It's called &lt;a href=&quot;http://www.restlet.org&quot;&gt;Restlet&lt;/a&gt; and can be seen as a fully-featured replacement of the Servlet API and JSP pages. It has support for cool URIs mapping to server code, representations caching and metadata access, easy HTTP status setting, content negotiation, basic authentication and many other things. Finally, the Resltet API is very spartan (JAR size is 65 kb) and has no external dependency.&lt;/p&gt;

&lt;p&gt;Hopefully it doesn't suck too much :-)&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>For Java developers, a REST framework/toolkit already exists. It&#8217;s called <a href="http://www.restlet.org">Restlet</a> and can be seen as a fully-featured replacement of the Servlet API and JSP pages. It has support for cool URIs mapping to server code, representations caching and metadata access, easy HTTP status setting, content negotiation, basic authentication and many other things. Finally, the Resltet API is very spartan (JAR size is 65 kb) and has no external dependency.</p>
<p>Hopefully it doesn&#8217;t suck too much :-)</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Ryan Tomayko</title>
		<link>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1307</link>
		<pubDate>Mon, 20 Mar 2006 09:22:41 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/19/rest-wins-noone-goes-home/#comment-1307</guid>
					<description>&lt;p&gt;Wow.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hype could be a problem for REST if the “industry” gets on board with
  it as a commmercial factor that requires ticking off rather than some
  dorky engineering stuff – “Do they have REST? Check.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How do we fight this? Replacing SOA or WS by REST in the press and in the vocabulary of analysts isn't going to solve anything. In fact, if REST were ever to spin out of control in a way resembling Web Services or SOA, I'd consider going back to pouring concrete (how's &lt;em&gt;that&lt;/em&gt; for less code).&lt;/p&gt;

&lt;p&gt;Our role will need to extend to that of vigilante should REST make serious in-roads with mainstream/commercial business IT. So while we're oooing and awwing over Fielding's profile in Time, we ought to make sure we're calling bullshit when they get it all wrong, make outrageous promises, or otherwise misrepresent core concepts.&lt;/p&gt;

&lt;p&gt;So I suggest we call phase one &lt;strong&gt;The PR Problem&lt;/strong&gt;. That is, we confuse the shit out of everyone for a time with stuff like &lt;a href=&quot;http://www.tbray.org/ongoing/When/200x/2006/03/16/WS-Gartner&quot;&gt;WS-Crossroads&lt;/a&gt;. Here we have Tim handing out props while at the same time being extremely critical. This will seem really weird to people used to the current Vendor / Standards Organization / Analyst / Press configuration because those guys all follow the same talking points and don't often challenge each other. People will mistake the types of constructive conversations Tim and Daryl are having for weakness and that's &lt;strong&gt;The PR Problem&lt;/strong&gt;. But that's okay, it's phase one.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Wow.</p>
<blockquote>
<p>Hype could be a problem for REST if the “industry” gets on board with<br />
  it as a commmercial factor that requires ticking off rather than some<br />
  dorky engineering stuff – “Do they have REST? Check.”</p>
</blockquote>
<p>How do we fight this? Replacing SOA or WS by REST in the press and in the vocabulary of analysts isn&#8217;t going to solve anything. In fact, if REST were ever to spin out of control in a way resembling Web Services or SOA, I&#8217;d consider going back to pouring concrete (how&#8217;s <em>that</em> for less code).</p>
<p>Our role will need to extend to that of vigilante should REST make serious in-roads with mainstream/commercial business IT. So while we&#8217;re oooing and awwing over Fielding&#8217;s profile in Time, we ought to make sure we&#8217;re calling bullshit when they get it all wrong, make outrageous promises, or otherwise misrepresent core concepts.</p>
<p>So I suggest we call phase one <strong>The PR Problem</strong>. That is, we confuse the shit out of everyone for a time with stuff like <a href="http://www.tbray.org/ongoing/When/200x/2006/03/16/WS-Gartner">WS-Crossroads</a>. Here we have Tim handing out props while at the same time being extremely critical. This will seem really weird to people used to the current Vendor / Standards Organization / Analyst / Press configuration because those guys all follow the same talking points and don&#8217;t often challenge each other. People will mistake the types of constructive conversations Tim and Daryl are having for weakness and that&#8217;s <strong>The PR Problem</strong>. But that&#8217;s okay, it&#8217;s phase one.</p>
]]></content:encoded>
				</item>
</channel>
</rss>

<!-- Dynamic Page Served (once) in 0.413 seconds -->
<!-- Cached page served by WP-Cache -->
