<?xml version="1.0" encoding="UTF-8"?><!-- generator="wordpress/2.0.1" -->
<rss version="2.0" 
	xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
	<title>Comments on: Gosling Didn&#8217;t Get The Memo</title>
	<link>http://lesscode.org/2006/03/12/someone-tell-gosling/</link>
	<description>AAaaaaahhhhrrrrrrr!</description>
	<pubDate>Mon, 17 Sep 2007 09:12:17 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.0.1</generator>

	<item>
		<title>by: cnemelka</title>
		<link>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-8496</link>
		<pubDate>Sun, 20 Aug 2006 08:41:33 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-8496</guid>
					<description>&lt;p&gt;I've seen a 70 year old carpenter put up a wall faster with a hammer than a 20 year old carpenter using a nail gun.&lt;/p&gt;

&lt;p&gt;I have been programming for 26+ years and try to learn a new language every year. My favorite still being C, but I rarely ever consider using it.&lt;/p&gt;

&lt;p&gt;I've seen great systems written in languages most of you have never heard of (EDL anyone?).&lt;/p&gt;

&lt;p&gt;I've seen crappy systems written in Java/C/C++/VB/Lisp/Algol/Forth,etc,etc, etc.  Compiled, interpreted or compiled to bytecode then interpreted, whatever.&lt;/p&gt;

&lt;p&gt;I've seen great systems written in those same languages.&lt;/p&gt;

&lt;p&gt;I've seen excellent programmers who have no idea why their software turns a high-end ORACLE RDBMS Server into an expensive brick.&lt;/p&gt;

&lt;p&gt;I've seen excellent DB admins who think that PL-SQL is the only language you should ever write in.&lt;/p&gt;

&lt;p&gt;I've seen countless projects fail because of issues at layer 8 of the OSI model (politics=Layer 8, for those of you who think there are only 7 layers)&lt;/p&gt;

&lt;p&gt;I've seen excellent programmers who think that all their code performance problems are because the network is slow.&lt;/p&gt;

&lt;p&gt;I've seen a lot of things in 26+ years.&lt;/p&gt;

&lt;p&gt;And I only wish to make two comments (neither original):&lt;/p&gt;

&lt;p&gt;1) People are more important than technology.
2) It's a poor musician that blames his instrument.&lt;/p&gt;

&lt;p&gt;And leave two pieces of advice:&lt;/p&gt;

&lt;p&gt;1) Implement technology based on a deep understanding of the problem/business/project/requirements,etc.
2) Learn what you do not know.&lt;/p&gt;

&lt;p&gt;--cnemelka&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>I&#8217;ve seen a 70 year old carpenter put up a wall faster with a hammer than a 20 year old carpenter using a nail gun.</p>
<p>I have been programming for 26+ years and try to learn a new language every year. My favorite still being C, but I rarely ever consider using it.</p>
<p>I&#8217;ve seen great systems written in languages most of you have never heard of (EDL anyone?).</p>
<p>I&#8217;ve seen crappy systems written in Java/C/C++/VB/Lisp/Algol/Forth,etc,etc, etc.  Compiled, interpreted or compiled to bytecode then interpreted, whatever.</p>
<p>I&#8217;ve seen great systems written in those same languages.</p>
<p>I&#8217;ve seen excellent programmers who have no idea why their software turns a high-end ORACLE RDBMS Server into an expensive brick.</p>
<p>I&#8217;ve seen excellent DB admins who think that PL-SQL is the only language you should ever write in.</p>
<p>I&#8217;ve seen countless projects fail because of issues at layer 8 of the OSI model (politics=Layer 8, for those of you who think there are only 7 layers)</p>
<p>I&#8217;ve seen excellent programmers who think that all their code performance problems are because the network is slow.</p>
<p>I&#8217;ve seen a lot of things in 26+ years.</p>
<p>And I only wish to make two comments (neither original):</p>
<p>1) People are more important than technology.<br />
2) It&#8217;s a poor musician that blames his instrument.</p>
<p>And leave two pieces of advice:</p>
<p>1) Implement technology based on a deep understanding of the problem/business/project/requirements,etc.<br />
2) Learn what you do not know.</p>
<p>&#8211;cnemelka</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Morves</title>
		<link>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-4972</link>
		<pubDate>Thu, 06 Jul 2006 20:03:37 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-4972</guid>
					<description>&lt;p&gt;Well, as for the “interplanetary navigation” issue, maybe we should hear from a NASA employee (Sean Kelly) what he thinks about Java and dynamic languages:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oodt.jpl.nasa.gov/better-web-app.mov&quot;&gt;http://oodt.jpl.nasa.gov/better-web-app.mov&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They have been using TCL/TK (dynamic language) to build GUIs for years, replacing C++. He says Java is &quot;not fun&quot; and far less productive than PHP, Python or Ruby for web development.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Well, as for the “interplanetary navigation” issue, maybe we should hear from a NASA employee (Sean Kelly) what he thinks about Java and dynamic languages:</p>
<p><a href="http://oodt.jpl.nasa.gov/better-web-app.mov">http://oodt.jpl.nasa.gov/better-web-app.mov</a></p>
<p>They have been using TCL/TK (dynamic language) to build GUIs for years, replacing C++. He says Java is &#8220;not fun&#8221; and far less productive than PHP, Python or Ruby for web development.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: XOOPS CHINA - WordPress &#187; Digg PHP&#8217;s Scalability and Performance</title>
		<link>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-3288</link>
		<pubDate>Fri, 26 May 2006 09:20:29 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-3288</guid>
					<description>&lt;p&gt;[...] Several weeks ago there was a notable bit of controversy over some comments made by James Gosling, father of the Java programming language. He has since addressed the flame war that erupted, but the whole ordeal got me thinking seriously about PHP and its scalability and performance abilities compared to Java. I knew that several hugely popular Web 2.0 applications were written in scripting languages like PHP, so I contacted Owen Byrne - Senior Software Engineer at digg.com to learn how he addressed any problems they encountered during their meteoric growth. This article addresses the all-to-common false assumptions about the cost of scalability and performance in PHP applications. [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] Several weeks ago there was a notable bit of controversy over some comments made by James Gosling, father of the Java programming language. He has since addressed the flame war that erupted, but the whole ordeal got me thinking seriously about PHP and its scalability and performance abilities compared to Java. I knew that several hugely popular Web 2.0 applications were written in scripting languages like PHP, so I contacted Owen Byrne - Senior Software Engineer at digg.com to learn how he addressed any problems they encountered during their meteoric growth. This article addresses the all-to-common false assumptions about the cost of scalability and performance in PHP applications. [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: &#187; Ruby je větší konkurent než Java, říká Don Box</title>
		<link>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1929</link>
		<pubDate>Thu, 27 Apr 2006 12:25:32 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1929</guid>
					<description>&lt;p&gt;[...] Don Box v&amp;#160;zápisku Gosling on Ruby po delší době upozornil na určité ignorantství Jamese Goslinga, duchovního i &amp;#8222;biologického&amp;#8220; otce Javy, který rozhovorem Java Is Under No Serious Threat From PHP, Ruby or C# zahrál mnoha příznivcům dynamických jazyků na jak na city, tak na vášně :) Asi nejlepší reakcí, jakou jsem viděl, je Gosling Didn’t Get The Memo. [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] Don Box v&nbsp;zápisku Gosling on Ruby po delší době upozornil na určité ignorantství Jamese Goslinga, duchovního i &bdquo;biologického&ldquo; otce Javy, který rozhovorem Java Is Under No Serious Threat From PHP, Ruby or C# zahrál mnoha příznivcům dynamických jazyků na jak na city, tak na vášně :) Asi nejlepší reakcí, jakou jsem viděl, je Gosling Didn’t Get The Memo. [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Isaac Gouy</title>
		<link>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1801</link>
		<pubDate>Tue, 25 Apr 2006 22:05:29 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1801</guid>
					<description>&lt;p&gt;Patrick Logan wrote: &lt;q&gt;Every use of LAMP is essentially using these “scripting” languages for middleware.&lt;/q&gt;&lt;/p&gt;

&lt;p&gt;I'll echo and amplify Paul's reply: Every use of LAMP is essentially using these &quot;scripting&quot; languages for &lt;strong&gt;glue&lt;/strong&gt; – they &quot;assume the existence of a set of powerful components and are intended primarily for connecting components together&quot; (John K. Ousterhout).&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Patrick Logan wrote: <q>Every use of LAMP is essentially using these “scripting” languages for middleware.</q></p>
<p>I&#8217;ll echo and amplify Paul&#8217;s reply: Every use of LAMP is essentially using these &#8220;scripting&#8221; languages for <strong>glue</strong> – they &#8220;assume the existence of a set of powerful components and are intended primarily for connecting components together&#8221; (John K. Ousterhout).</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Paul</title>
		<link>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1679</link>
		<pubDate>Fri, 21 Apr 2006 22:23:59 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1679</guid>
					<description>&lt;p&gt;I guess you could classify apache as middleware, but the scripts like PHP aren't really doing the middle job, apache is. &lt;/p&gt;

&lt;p&gt;Now if you wrote a webserver or an ORB entirely with PHP, then it would be middleware. And that's my point no one is doing such things with PHP because it's not meant for that sort of thing.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>I guess you could classify apache as middleware, but the scripts like PHP aren&#8217;t really doing the middle job, apache is. </p>
<p>Now if you wrote a webserver or an ORB entirely with PHP, then it would be middleware. And that&#8217;s my point no one is doing such things with PHP because it&#8217;s not meant for that sort of thing.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Patrick Logan</title>
		<link>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1678</link>
		<pubDate>Fri, 21 Apr 2006 20:39:15 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1678</guid>
					<description>&lt;p&gt;Every use of LAMP is essentially using these &quot;scripting&quot; languages for middleware.&lt;/p&gt;

&lt;p&gt;To see something that might be cast in a more familiar &quot;middleware&quot; light, check out &lt;a href=&quot;http://www.activegrid.com/&quot;&gt;ActiveGrid&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Their motto is &quot;Tap the power of LAMP for service-oriented applications&quot;.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Every use of LAMP is essentially using these &#8220;scripting&#8221; languages for middleware.</p>
<p>To see something that might be cast in a more familiar &#8220;middleware&#8221; light, check out <a href="http://www.activegrid.com/">ActiveGrid</a>.</p>
<p>Their motto is &#8220;Tap the power of LAMP for service-oriented applications&#8221;.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Paul</title>
		<link>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1676</link>
		<pubDate>Fri, 21 Apr 2006 18:59:50 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1676</guid>
					<description>&lt;p&gt;If these &quot;scripting languages&quot; are supposed to replace Java, then why aren't they used like Java/C++ for building middleware layers? Seems like developers would use them for this purpose if they fit.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>If these &#8220;scripting languages&#8221; are supposed to replace Java, then why aren&#8217;t they used like Java/C++ for building middleware layers? Seems like developers would use them for this purpose if they fit.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: JavaStation Builder NetWork 2006 &#187; Digg PHP&#8217;s Scalability and Performance</title>
		<link>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1555</link>
		<pubDate>Thu, 20 Apr 2006 03:18:46 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1555</guid>
					<description>&lt;p&gt;[...] Several weeks ago there was a notable bit of controversy over some comments made by James Gosling, father of the Java programming language. He has since addressed the flame war that erupted, but the whole ordeal got me thinking seriously about PHP and its scalability and performance abilities compared to Java. I knew that several hugely popular Web 2.0 applications were written in scripting languages like PHP, so I contacted Owen Byrne - Senior Software Engineer at digg.com to learn how he addressed any problems they encountered during their meteoric growth. This article addresses the all-to-common false assumptions about the cost of scalability and performance in PHP applications. [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] Several weeks ago there was a notable bit of controversy over some comments made by James Gosling, father of the Java programming language. He has since addressed the flame war that erupted, but the whole ordeal got me thinking seriously about PHP and its scalability and performance abilities compared to Java. I knew that several hugely popular Web 2.0 applications were written in scripting languages like PHP, so I contacted Owen Byrne - Senior Software Engineer at digg.com to learn how he addressed any problems they encountered during their meteoric growth. This article addresses the all-to-common false assumptions about the cost of scalability and performance in PHP applications. [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Does not compute &#187; Blog Archive &#187; When Jini&#8217;s roamed the earth</title>
		<link>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1529</link>
		<pubDate>Wed, 19 Apr 2006 04:53:07 +0000</pubDate>
		<guid>http://lesscode.org/2006/03/12/someone-tell-gosling/#comment-1529</guid>
					<description>&lt;p&gt;[...] In preparation for working on the specs for HLVM (High Level Virtual Machine) I have been brainstorming on what the future of languages and language features might be. Something that is high on my list is a better conceptual model for dealing with multiple processors. While describing the sort of system that I was envisioning a coworker mentioned that what I was saying sounded like Jini, that Java related technology that never really seemed to get going. So today I decided to do some research on what Jini was all about and how those ideas could benefit my current line of thinking. In this article(page 4 specifically) from 1999, Bill Venners who went on to found Artima speaks to Bill Joy and then James Gosling. James, who as you may know has had some problems recently with the dynamic language community had some interesting things to say about the way programmers use the language HE designed. Bill Venners: So given that it was more perceived along the lines of embedded devices, or that&amp;#8217;s how you thought of it, would you say there are deficiencies in Java for the enterprise environment, or areas in which you could do better at the language level? [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] In preparation for working on the specs for HLVM (High Level Virtual Machine) I have been brainstorming on what the future of languages and language features might be. Something that is high on my list is a better conceptual model for dealing with multiple processors. While describing the sort of system that I was envisioning a coworker mentioned that what I was saying sounded like Jini, that Java related technology that never really seemed to get going. So today I decided to do some research on what Jini was all about and how those ideas could benefit my current line of thinking. In this article(page 4 specifically) from 1999, Bill Venners who went on to found Artima speaks to Bill Joy and then James Gosling. James, who as you may know has had some problems recently with the dynamic language community had some interesting things to say about the way programmers use the language HE designed. Bill Venners: So given that it was more perceived along the lines of embedded devices, or that&#8217;s how you thought of it, would you say there are deficiencies in Java for the enterprise environment, or areas in which you could do better at the language level? [&#8230;]</p>
]]></content:encoded>
				</item>
</channel>
</rss>

<!-- Dynamic Page Served (once) in 0.357 seconds -->
<!-- Cached page served by WP-Cache -->
