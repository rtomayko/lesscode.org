<?xml version="1.0" encoding="UTF-8"?><!-- generator="wordpress/2.0.1" -->
<rss version="2.0" 
	xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
	<title>Comments on: Design Patterns as a statement of failure</title>
	<link>http://lesscode.org/2006/10/01/design-patterns-as-a-statement-of-failure/</link>
	<description>AAaaaaahhhhrrrrrrr!</description>
	<pubDate>Mon, 17 Sep 2007 09:10:42 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.0.1</generator>

	<item>
		<title>by: Pianelli</title>
		<link>http://lesscode.org/2006/10/01/design-patterns-as-a-statement-of-failure/#comment-37879</link>
		<pubDate>Thu, 05 Apr 2007 22:03:10 +0000</pubDate>
		<guid>http://lesscode.org/2006/10/01/design-patterns-as-a-statement-of-failure/#comment-37879</guid>
					<description>&lt;p&gt;I´m using Design Patterns in all on my projects written in PHP5. And I think you get your code more flexible than without design patterns.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>I´m using Design Patterns in all on my projects written in PHP5. And I think you get your code more flexible than without design patterns.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Trevor Baca</title>
		<link>http://lesscode.org/2006/10/01/design-patterns-as-a-statement-of-failure/#comment-17198</link>
		<pubDate>Fri, 27 Oct 2006 20:16:14 +0000</pubDate>
		<guid>http://lesscode.org/2006/10/01/design-patterns-as-a-statement-of-failure/#comment-17198</guid>
					<description>&lt;p&gt;Couldn't agree with the quote from Mark more. I've been leading development work at two different development companies (NetworkIP and Jaduka.com) and at both companies we're just now finishing up a move from almost eight years of C into a brighter, newer future in python, neatly bypassing both Java and C++ for most of the significant server-side code in our projects. And what's been more important than anything -- especially with the move to python -- has been pattern agreement and understanding on our team. In general, we as programmers as a whole probably did need the intermediate state of enforced-OOP that Java and C++ provided. And it's nice that we're now able to apply patterns directly, regardless of langauge.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Couldn&#8217;t agree with the quote from Mark more. I&#8217;ve been leading development work at two different development companies (NetworkIP and Jaduka.com) and at both companies we&#8217;re just now finishing up a move from almost eight years of C into a brighter, newer future in python, neatly bypassing both Java and C++ for most of the significant server-side code in our projects. And what&#8217;s been more important than anything &#8212; especially with the move to python &#8212; has been pattern agreement and understanding on our team. In general, we as programmers as a whole probably did need the intermediate state of enforced-OOP that Java and C++ provided. And it&#8217;s nice that we&#8217;re now able to apply patterns directly, regardless of langauge.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Danno</title>
		<link>http://lesscode.org/2006/10/01/design-patterns-as-a-statement-of-failure/#comment-14009</link>
		<pubDate>Sun, 01 Oct 2006 19:15:08 +0000</pubDate>
		<guid>http://lesscode.org/2006/10/01/design-patterns-as-a-statement-of-failure/#comment-14009</guid>
					<description>&lt;p&gt;Holy guacamole!  New lesscode articles!&lt;/p&gt;

&lt;p&gt;This one hits close to home for me.  I'm taking a Generic Software Design class and I think they should change the name to &quot;Exploring operations that have been done millions of times by people on C++ data types&quot;.&lt;/p&gt;

&lt;p&gt;Half of the time we keep revisiting the fact that an algorithm should have certain performance guarantees, but in practice, even in the GNU versions of the STL, there are performance violations.  So, I'm like, &quot;Well, christ, if we can't even get one of the most important distributions in the world to be well written, what hope does Joe Programmer have.&quot;&lt;/p&gt;

&lt;p&gt;Of course, I don't say that outloud because I don't want to fail the class, but I'm damned well thinking it.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Holy guacamole!  New lesscode articles!</p>
<p>This one hits close to home for me.  I&#8217;m taking a Generic Software Design class and I think they should change the name to &#8220;Exploring operations that have been done millions of times by people on C++ data types&#8221;.</p>
<p>Half of the time we keep revisiting the fact that an algorithm should have certain performance guarantees, but in practice, even in the GNU versions of the STL, there are performance violations.  So, I&#8217;m like, &#8220;Well, christ, if we can&#8217;t even get one of the most important distributions in the world to be well written, what hope does Joe Programmer have.&#8221;</p>
<p>Of course, I don&#8217;t say that outloud because I don&#8217;t want to fail the class, but I&#8217;m damned well thinking it.</p>
]]></content:encoded>
				</item>
</channel>
</rss>

<!-- Dynamic Page Served (once) in 0.388 seconds -->
<!-- Cached page served by WP-Cache -->
