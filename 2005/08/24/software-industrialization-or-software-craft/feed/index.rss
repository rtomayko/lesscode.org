<?xml version="1.0" encoding="UTF-8"?><!-- generator="wordpress/2.0.1" -->
<rss version="2.0" 
	xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
	<title>Comments on: Software Industrialization Or Software Craft?</title>
	<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/</link>
	<description>AAaaaaahhhhrrrrrrr!</description>
	<pubDate>Mon, 17 Sep 2007 09:12:40 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.0.1</generator>

	<item>
		<title>by: Ethical Software by Alex Bunardzic &#187; Smart Master</title>
		<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-839</link>
		<pubDate>Sat, 24 Dec 2005 02:48:39 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-839</guid>
					<description>&lt;p&gt;[...] You&amp;#8217;ve heard me talk about the concept of smart servant on more than one occasion (HLL Vs. VHLL, What Is A Software Product, Ruby on Rails Value Proposition, Verbal Communication and Software Industrialization or Software Craft?). I first heard of that concept ten years ago, when I made a switch from the machine-centric to human-centric software development. I&amp;#8217;ll continue to explore this fascinating subject, but today I&amp;#8217;d like to make a slight detour and talk a bit about the flip side of the coin &amp;#8212; the smart master. [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] You&#8217;ve heard me talk about the concept of smart servant on more than one occasion (HLL Vs. VHLL, What Is A Software Product, Ruby on Rails Value Proposition, Verbal Communication and Software Industrialization or Software Craft?). I first heard of that concept ten years ago, when I made a switch from the machine-centric to human-centric software development. I&#8217;ll continue to explore this fascinating subject, but today I&#8217;d like to make a slight detour and talk a bit about the flip side of the coin &#8212; the smart master. [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Ethical Software by Alex Bunardzic &#187; Ruby on Rails Value Proposition</title>
		<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-702</link>
		<pubDate>Sat, 29 Oct 2005 05:01:38 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-702</guid>
					<description>&lt;p&gt;[...] Why is this? Simply put, Rails relieves me from the drudgery of doing the stuff inbetween, the stuff that all the other platforms and languages insist I work on. Pretty much anything that happens between the formulation of my business model and the articulation of the end-user experiences as that user interact with the system, is taken care of by Rails. I wrote a couple of months ago about the Smart Servant, and it bears repeating here &amp;#8212; Rails is a smart servant, in the sense that its reason d&amp;#8217;etre is to do everything possible in order to ease the developer&amp;#8217;s burden of implementation. [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] Why is this? Simply put, Rails relieves me from the drudgery of doing the stuff inbetween, the stuff that all the other platforms and languages insist I work on. Pretty much anything that happens between the formulation of my business model and the articulation of the end-user experiences as that user interact with the system, is taken care of by Rails. I wrote a couple of months ago about the Smart Servant, and it bears repeating here &#8212; Rails is a smart servant, in the sense that its reason d&#8217;etre is to do everything possible in order to ease the developer&#8217;s burden of implementation. [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Ethical Software by Alex Bunardzic &#187; Verbal Communication</title>
		<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-683</link>
		<pubDate>Tue, 25 Oct 2005 18:37:16 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-683</guid>
					<description>&lt;p&gt;[...] I personally found that Ruby is the tool that can help me resolve the above described impasse. Ruby is the Smart Servant that understands my human bent toward plain text, and at the same time knows how to translate my text-based intentions to the underlying machinery. This match made in heaven allows me to easily maintain the desired level of verbal communication without worrying about translating all that mess into a machine-readable form. [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] I personally found that Ruby is the tool that can help me resolve the above described impasse. Ruby is the Smart Servant that understands my human bent toward plain text, and at the same time knows how to translate my text-based intentions to the underlying machinery. This match made in heaven allows me to easily maintain the desired level of verbal communication without worrying about translating all that mess into a machine-readable form. [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: hxa</title>
		<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-400</link>
		<pubDate>Sun, 18 Sep 2005 18:56:48 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-400</guid>
					<description>&lt;p&gt;As soon as you start reading the 'software industrialization' stuff from the link, it is impossible not to see it as yet another big-vendor-framework-pipe-dream. And that particular group is from microsoft -- who have a solid track record of this vaporware. There are surely some elements of substance, but they will emerge in a disorganized, evolutionary, way.&lt;/p&gt;

&lt;p&gt;I don't believe there is/has been a software crisis. Software is everywhere, doing things previously impossible, and continually advancing. One can compare with other industries for perspective.&lt;/p&gt;

&lt;p&gt;The way I see the future happening is mostly a gradual disappearance of software. Common, limited, uses of software spread and solidify, copies of 'applications' are then bought not built. It is a steady escalation of reuse. The commercial forces toward that must be irrestistable.&lt;/p&gt;

&lt;p&gt;As a detail I would foresee a great simplification and specialisation of 'development'. Business domains would have quasi-technical people 'configuring' business applications. That would be my angle on 'smart servant'.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>As soon as you start reading the &#8217;software industrialization&#8217; stuff from the link, it is impossible not to see it as yet another big-vendor-framework-pipe-dream. And that particular group is from microsoft &#8212; who have a solid track record of this vaporware. There are surely some elements of substance, but they will emerge in a disorganized, evolutionary, way.</p>
<p>I don&#8217;t believe there is/has been a software crisis. Software is everywhere, doing things previously impossible, and continually advancing. One can compare with other industries for perspective.</p>
<p>The way I see the future happening is mostly a gradual disappearance of software. Common, limited, uses of software spread and solidify, copies of &#8216;applications&#8217; are then bought not built. It is a steady escalation of reuse. The commercial forces toward that must be irrestistable.</p>
<p>As a detail I would foresee a great simplification and specialisation of &#8216;development&#8217;. Business domains would have quasi-technical people &#8216;configuring&#8217; business applications. That would be my angle on &#8217;smart servant&#8217;.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: alexbunardzic</title>
		<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-290</link>
		<pubDate>Thu, 25 Aug 2005 23:59:08 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-290</guid>
					<description>&lt;p&gt;teddziuba wrote:&lt;/p&gt;

&lt;p&gt;&quot;Let me see if I’ve got your idea correctly. You’re talking about building software that is “smart”, so that it will eliminate the need for other software?&quot;&lt;/p&gt;

&lt;p&gt;Hmmm, a very intriguing concept indeed, however, that's not what I had in mind.&lt;/p&gt;

&lt;p&gt;When I talk about the 'smart servant', I typically think of something like this:&lt;/p&gt;

&lt;p&gt;Let's say that I'm in the middle of a very delicate operation, such as painting my back porch floor in a sweltering summer day, or something like that. All of a sudden, as I'm working, I feel mighty thirsty, and I tell my 'smart servant':&lt;/p&gt;

&lt;p&gt;&quot;I feel like having a beer!&quot;&lt;/p&gt;

&lt;p&gt;What I expect him to do then is go fetch me a cold beer, and serve it in a shady spot in my back yard. I wouldn't want him to go get a beer and then calously barge into the painted area and shove the beer in my face while I'm in the middle of holding my brush.&lt;/p&gt;

&lt;p&gt;A 'smart servant' works on the principle of 'do what I mean', not on the principle 'do what I tell you to do'.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>teddziuba wrote:</p>
<p>&#8220;Let me see if I’ve got your idea correctly. You’re talking about building software that is “smart”, so that it will eliminate the need for other software?&#8221;</p>
<p>Hmmm, a very intriguing concept indeed, however, that&#8217;s not what I had in mind.</p>
<p>When I talk about the &#8217;smart servant&#8217;, I typically think of something like this:</p>
<p>Let&#8217;s say that I&#8217;m in the middle of a very delicate operation, such as painting my back porch floor in a sweltering summer day, or something like that. All of a sudden, as I&#8217;m working, I feel mighty thirsty, and I tell my &#8217;smart servant&#8217;:</p>
<p>&#8220;I feel like having a beer!&#8221;</p>
<p>What I expect him to do then is go fetch me a cold beer, and serve it in a shady spot in my back yard. I wouldn&#8217;t want him to go get a beer and then calously barge into the painted area and shove the beer in my face while I&#8217;m in the middle of holding my brush.</p>
<p>A &#8217;smart servant&#8217; works on the principle of &#8216;do what I mean&#8217;, not on the principle &#8216;do what I tell you to do&#8217;.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: alexbunardzic</title>
		<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-288</link>
		<pubDate>Thu, 25 Aug 2005 21:48:48 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-288</guid>
					<description>&lt;p&gt;People, people...&lt;/p&gt;

&lt;p&gt;You overwhelm me! I was astonished to find so much intelligent discussion on this topic today. Believe me, I've learned a lot by reading your thoughts posted above. I feel totally humbled now.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>People, people&#8230;</p>
<p>You overwhelm me! I was astonished to find so much intelligent discussion on this topic today. Believe me, I&#8217;ve learned a lot by reading your thoughts posted above. I feel totally humbled now.</p>
<p>Thank you!</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Ian Bicking</title>
		<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-278</link>
		<pubDate>Thu, 25 Aug 2005 09:12:03 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-278</guid>
					<description>&lt;p&gt;I think the industrialization model is premised on a command-based decision process, where software consumers define a piece of software, and dictate that employees produce that piece of software.  Industialization proponents want to make that process as predictable as possible.  &lt;/p&gt;

&lt;p&gt;I think a premise of this is an employer/employee model where decisions and transfer of knowledge is unidirectional.  Even software experts who participate in the process are taken out of the production side into management.  It's a system where hierarchy becomes the defining structure of an organization, not skill or duties or complementary roles.&lt;/p&gt;

&lt;p&gt;A market-based approach is something of an alternative, but markets don't generally allow for intelligent conversations.  The &quot;conversation&quot; in the market is statically inferred, a metaphor, not a literal exchange.  But conversations -- literal, not metaphorical -- are important to good design.  While some problems can be solved with wise producers who speculate on the utility of a product (common for mass-marketed software), this isn't feasible for a large class of problems where the resulting risk is too great, and the software producer has significantly different domain knowledge from the software consumer.  &lt;/p&gt;

&lt;p&gt;To me the &quot;smart servant&quot; implies some combination of these two ideas.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>I think the industrialization model is premised on a command-based decision process, where software consumers define a piece of software, and dictate that employees produce that piece of software.  Industialization proponents want to make that process as predictable as possible.  </p>
<p>I think a premise of this is an employer/employee model where decisions and transfer of knowledge is unidirectional.  Even software experts who participate in the process are taken out of the production side into management.  It&#8217;s a system where hierarchy becomes the defining structure of an organization, not skill or duties or complementary roles.</p>
<p>A market-based approach is something of an alternative, but markets don&#8217;t generally allow for intelligent conversations.  The &#8220;conversation&#8221; in the market is statically inferred, a metaphor, not a literal exchange.  But conversations &#8212; literal, not metaphorical &#8212; are important to good design.  While some problems can be solved with wise producers who speculate on the utility of a product (common for mass-marketed software), this isn&#8217;t feasible for a large class of problems where the resulting risk is too great, and the software producer has significantly different domain knowledge from the software consumer.  </p>
<p>To me the &#8220;smart servant&#8221; implies some combination of these two ideas.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: J Drakes</title>
		<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-277</link>
		<pubDate>Thu, 25 Aug 2005 08:37:17 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-277</guid>
					<description>&lt;p&gt;I think that the 'smart servant concept' is really on the opposite side of the 'software industrialization' concept.  The way I see it, the smart servant is built to fit like a glove to a user special needs and to his way to express such needs.  In a way it is very highly specialized and idiosyncratic to the user language.  A piece of industrialized software, due to its very nature, must be so generic and high level that it will require lots of configuration and specification, requiring a larger body of knowledge and making it quite unweldly to use in practice.  I see smart servants as being the way to go on the frontline of business innovation, with factory software taking care of the informational infrastructure.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>I think that the &#8217;smart servant concept&#8217; is really on the opposite side of the &#8217;software industrialization&#8217; concept.  The way I see it, the smart servant is built to fit like a glove to a user special needs and to his way to express such needs.  In a way it is very highly specialized and idiosyncratic to the user language.  A piece of industrialized software, due to its very nature, must be so generic and high level that it will require lots of configuration and specification, requiring a larger body of knowledge and making it quite unweldly to use in practice.  I see smart servants as being the way to go on the frontline of business innovation, with factory software taking care of the informational infrastructure.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Christopher Andersson</title>
		<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-276</link>
		<pubDate>Thu, 25 Aug 2005 05:58:46 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-276</guid>
					<description>&lt;p&gt;Isn't the &quot;smart servant&quot; the result of industrialization?  &lt;/p&gt;

&lt;p&gt;With industrialization in place the small details of cogs and wheels don't have to be thought about, and the creator can operate on a higher level.  As in the difference between writing in assembly as opposed to writing in Java or C#.&lt;/p&gt;

&lt;p&gt;Unless I'm completely missing the point of what a smart servant should be I see it as almost one and the same.  You industrialize to have the smart servant.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Isn&#8217;t the &#8220;smart servant&#8221; the result of industrialization?  </p>
<p>With industrialization in place the small details of cogs and wheels don&#8217;t have to be thought about, and the creator can operate on a higher level.  As in the difference between writing in assembly as opposed to writing in Java or C#.</p>
<p>Unless I&#8217;m completely missing the point of what a smart servant should be I see it as almost one and the same.  You industrialize to have the smart servant.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: teddziuba</title>
		<link>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-275</link>
		<pubDate>Thu, 25 Aug 2005 02:50:38 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/24/software-industrialization-or-software-craft/#comment-275</guid>
					<description>&lt;p&gt;Let me see if I've got your idea correctly.  You're talking about building software that is &quot;smart&quot;, so that it will eliminate the need for other software?&lt;/p&gt;

&lt;p&gt;I suppose an example of something like this would be Google.  When I search on Google, many times I feel like it's reading my mind.  It's not just the relevance of the search results, it's the often psychic &quot;special hits&quot; at the top - like Calculator, Phone Book, News Articles, etc.  Such &quot;mind reading&quot; isn't easy, though.&lt;/p&gt;

&lt;p&gt;I think, however, it would be somewhat wasted effort to code up a general case for all the one-offs and corner-cases.  Sometimes, a specialized program works the best.&lt;/p&gt;

&lt;p&gt;Or am I reading your idea wrong?&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Let me see if I&#8217;ve got your idea correctly.  You&#8217;re talking about building software that is &#8220;smart&#8221;, so that it will eliminate the need for other software?</p>
<p>I suppose an example of something like this would be Google.  When I search on Google, many times I feel like it&#8217;s reading my mind.  It&#8217;s not just the relevance of the search results, it&#8217;s the often psychic &#8220;special hits&#8221; at the top - like Calculator, Phone Book, News Articles, etc.  Such &#8220;mind reading&#8221; isn&#8217;t easy, though.</p>
<p>I think, however, it would be somewhat wasted effort to code up a general case for all the one-offs and corner-cases.  Sometimes, a specialized program works the best.</p>
<p>Or am I reading your idea wrong?</p>
]]></content:encoded>
				</item>
</channel>
</rss>

<!-- Dynamic Page Served (once) in 0.504 seconds -->
<!-- Cached page served by WP-Cache -->
