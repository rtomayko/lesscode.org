<?xml version="1.0" encoding="UTF-8"?><!-- generator="wordpress/2.0.1" -->
<rss version="2.0" 
	xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
	<title>Comments on: Freedom vs. Safety</title>
	<link>http://lesscode.org/2005/08/25/freedom-vs-safety/</link>
	<description>AAaaaaahhhhrrrrrrr!</description>
	<pubDate>Mon, 17 Sep 2007 09:12:40 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.0.1</generator>

	<item>
		<title>by: Freedom Languages &#8212; a seminal essay &#171; Curt&#8217;s Comments</title>
		<link>http://lesscode.org/2005/08/25/freedom-vs-safety/#comment-14748</link>
		<pubDate>Mon, 09 Oct 2006 02:09:36 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/25/freedom-vs-safety/#comment-14748</guid>
					<description>&lt;p&gt;[...] Many thanks to lesscode.org for bringing this excellent essay to my attention. [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] Many thanks to lesscode.org for bringing this excellent essay to my attention. [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Ryan Tomayko</title>
		<link>http://lesscode.org/2005/08/25/freedom-vs-safety/#comment-291</link>
		<pubDate>Fri, 26 Aug 2005 07:21:19 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/25/freedom-vs-safety/#comment-291</guid>
					<description>&lt;blockquote&gt;
  &lt;p&gt;Freedom languages are great, but does that always imply a dynamic
  language?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Exactly. Dynamicism is a set of techniques for enabling certain styles
of programming that many find desirable, if not essential. I think the
article is making a case that its not necessarily the specific
techniques that we find so useful but the mindset they enable.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<blockquote>
<p>Freedom languages are great, but does that always imply a dynamic<br />
  language?</p>
</blockquote>
<p>Exactly. Dynamicism is a set of techniques for enabling certain styles<br />
of programming that many find desirable, if not essential. I think the<br />
article is making a case that its not necessarily the specific<br />
techniques that we find so useful but the mindset they enable.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Greg Buchholz</title>
		<link>http://lesscode.org/2005/08/25/freedom-vs-safety/#comment-289</link>
		<pubDate>Thu, 25 Aug 2005 23:36:07 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/25/freedom-vs-safety/#comment-289</guid>
					<description>&lt;p&gt;Freedom languages are great, but does that always imply a dynamic language?  Here's my &lt;a href=&quot;http://kerneltrap.org/node/5591&quot; rel=&quot;nofollow&quot;&gt;thoughts&lt;/a&gt; on the subject.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Freedom languages are great, but does that always imply a dynamic language?  Here&#8217;s my <a href="http://kerneltrap.org/node/5591">thoughts</a> on the subject.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Urs Gubser</title>
		<link>http://lesscode.org/2005/08/25/freedom-vs-safety/#comment-287</link>
		<pubDate>Thu, 25 Aug 2005 21:20:47 +0000</pubDate>
		<guid>http://lesscode.org/2005/08/25/freedom-vs-safety/#comment-287</guid>
					<description>&lt;p&gt;I've started to include this blog in my RSS reader. I really really like the subjects. I'm a developer of many years myself.. but lately I moved more into the project management phase (I guess we all end up there sooner or later) and now look at programming as something I do in my spare time. &lt;/p&gt;

&lt;p&gt;What does that mean: It means I can look at programming from both sides - the one that does it and the one that oversees software projects. Now, I've been a big supporter of Java for many years. Java was really the next best thing after NeXT collapsed (and with that my beloved Objective-c). Java was great until about Java 1.2 - that's when the language became so bloated and all of a sudden tried to be everything to everyone. When Sun decided to roll out a new marketing concept called J2EE, I was first impressed and then suddenly depressed after realizing that J2EE was just another way of making a solution more complex than it had to be - sort of reminded me a lot when people started to think that programming patterns where the future (thanks GoF for that one) - not that there is anything wrong with patterns, it's just that I don't neccessarily need them. But anyway, back to this: Java is clearly bloated today and absolutely unusable for large systems - it takes forever to do anything in Java - even the smallest of small problems (the JVM is slow, the memory foot print is crazy and to write a simple look you have to create an iterator [ ok that's not so different from other languages]). While I have to use Java in my work - I recently started to date a new language called Ruby and I think I'm in Love.. or rather it's that same feeling that I had when I started to do software development so many years ago.. (in the 80's). The point being here: statically typed or dynamically typed never really mattered to me - what does matter is  flexibility, ease of development and a quick development environment. Ruby has all that, Java had all that.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>I&#8217;ve started to include this blog in my RSS reader. I really really like the subjects. I&#8217;m a developer of many years myself.. but lately I moved more into the project management phase (I guess we all end up there sooner or later) and now look at programming as something I do in my spare time. </p>
<p>What does that mean: It means I can look at programming from both sides - the one that does it and the one that oversees software projects. Now, I&#8217;ve been a big supporter of Java for many years. Java was really the next best thing after NeXT collapsed (and with that my beloved Objective-c). Java was great until about Java 1.2 - that&#8217;s when the language became so bloated and all of a sudden tried to be everything to everyone. When Sun decided to roll out a new marketing concept called J2EE, I was first impressed and then suddenly depressed after realizing that J2EE was just another way of making a solution more complex than it had to be - sort of reminded me a lot when people started to think that programming patterns where the future (thanks GoF for that one) - not that there is anything wrong with patterns, it&#8217;s just that I don&#8217;t neccessarily need them. But anyway, back to this: Java is clearly bloated today and absolutely unusable for large systems - it takes forever to do anything in Java - even the smallest of small problems (the JVM is slow, the memory foot print is crazy and to write a simple look you have to create an iterator [ ok that&#8217;s not so different from other languages]). While I have to use Java in my work - I recently started to date a new language called Ruby and I think I&#8217;m in Love.. or rather it&#8217;s that same feeling that I had when I started to do software development so many years ago.. (in the 80&#8217;s). The point being here: statically typed or dynamically typed never really mattered to me - what does matter is  flexibility, ease of development and a quick development environment. Ruby has all that, Java had all that.</p>
]]></content:encoded>
				</item>
</channel>
</rss>

<!-- Dynamic Page Served (once) in 0.313 seconds -->
<!-- Cached page served by WP-Cache -->
