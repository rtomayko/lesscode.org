<?xml version="1.0" encoding="UTF-8"?><!-- generator="wordpress/2.0.1" -->
<rss version="2.0" 
	xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
	<title>Comments on: Rails and Django Compared</title>
	<link>http://lesscode.org/2005/07/17/rails-django-compared/</link>
	<description>AAaaaaahhhhrrrrrrr!</description>
	<pubDate>Mon, 17 Sep 2007 09:13:06 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.0.1</generator>

	<item>
		<title>by: Django o Ruby On Rails</title>
		<link>http://lesscode.org/2005/07/17/rails-django-compared/#comment-5394</link>
		<pubDate>Tue, 18 Jul 2006 18:57:06 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/17/rails-django-compared/#comment-5394</guid>
					<description>&lt;p&gt;[...] Rails and Django Compared [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] Rails and Django Compared [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Guy Murphy</title>
		<link>http://lesscode.org/2005/07/17/rails-django-compared/#comment-796</link>
		<pubDate>Sun, 04 Dec 2005 15:37:22 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/17/rails-django-compared/#comment-796</guid>
					<description>&lt;blockquote&gt;
As for Boo and Groovy, I do hope they work out because I would like nothing more than to see dynamic languages take over the mainstream VMs but I’ve seen little to suggest that they provide the level of quality, performance, or community backing of the C based interpreters.
&lt;/blockquote&gt;

&lt;p&gt;IronPython is faster than CPython, and CPython compatible... what more do you want?... Python under .NET is faster than CPython.&lt;/p&gt;

&lt;p&gt;If the Pythonic bit is of interest without the Python lib, then Boo fits the bill very well.&lt;/p&gt;

&lt;p&gt;If performance and quality are still of concern to you, then I'd respectfully suggest you might need to update your view of the current state of art past the benchmark Active State set quite some time ago.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<blockquote><p>
As for Boo and Groovy, I do hope they work out because I would like nothing more than to see dynamic languages take over the mainstream VMs but I’ve seen little to suggest that they provide the level of quality, performance, or community backing of the C based interpreters.
</p></blockquote>
<p>IronPython is faster than CPython, and CPython compatible&#8230; what more do you want?&#8230; Python under .NET is faster than CPython.</p>
<p>If the Pythonic bit is of interest without the Python lib, then Boo fits the bill very well.</p>
<p>If performance and quality are still of concern to you, then I&#8217;d respectfully suggest you might need to update your view of the current state of art past the benchmark Active State set quite some time ago.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Michael</title>
		<link>http://lesscode.org/2005/07/17/rails-django-compared/#comment-388</link>
		<pubDate>Sat, 17 Sep 2005 15:26:26 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/17/rails-django-compared/#comment-388</guid>
					<description>&lt;p&gt;Subway / Django: The most important reason why Django gets attention and Subway doesn't is the docs. Django's isn't finished but already very usable, Subway's is just an empty wiki - true to Python web framework tradition.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Subway / Django: The most important reason why Django gets attention and Subway doesn&#8217;t is the docs. Django&#8217;s isn&#8217;t finished but already very usable, Subway&#8217;s is just an empty wiki - true to Python web framework tradition.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Magpie&#8217;s Django / Rails comparison [@lesscode.org]</title>
		<link>http://lesscode.org/2005/07/17/rails-django-compared/#comment-203</link>
		<pubDate>Tue, 16 Aug 2005 16:14:40 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/17/rails-django-compared/#comment-203</guid>
					<description>&lt;p&gt;[...] As a side note, I had planned to do a series around this but I promised Adrian and Jacob I&amp;#8217;d hold off until Django was launched-launched, which I assumed meant 1.0 at the time but that seems a ways off now&amp;#8230; I&amp;#8217;m not sure Django can get any more launched at this point so I might have to revisit that promise as I&amp;#8217;m anxious to get moving on this. [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] As a side note, I had planned to do a series around this but I promised Adrian and Jacob I&#8217;d hold off until Django was launched-launched, which I assumed meant 1.0 at the time but that seems a ways off now&#8230; I&#8217;m not sure Django can get any more launched at this point so I might have to revisit that promise as I&#8217;m anxious to get moving on this. [&#8230;]</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Anonymous</title>
		<link>http://lesscode.org/2005/07/17/rails-django-compared/#comment-110</link>
		<pubDate>Thu, 21 Jul 2005 16:29:08 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/17/rails-django-compared/#comment-110</guid>
					<description>&lt;p&gt;M. Edward Borasky: &lt;a href=&quot;http://bknr.net/home&quot; rel=&quot;nofollow&quot;&gt;BKNR&lt;/a&gt; is a Common Lisp Web Application environment.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>M. Edward Borasky: <a href="http://bknr.net/home">BKNR</a> is a Common Lisp Web Application environment.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Simon Brunning</title>
		<link>http://lesscode.org/2005/07/17/rails-django-compared/#comment-107</link>
		<pubDate>Thu, 21 Jul 2005 09:30:38 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/17/rails-django-compared/#comment-107</guid>
					<description>&lt;p&gt;You're right, Ryan, there's no way that was the effbot. Nothing like terse enough. ;-)&lt;/p&gt;

&lt;p&gt;I really never saw the point in Groovey. What does it promise to deliver that Jython doesn't already give you?&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>You&#8217;re right, Ryan, there&#8217;s no way that was the effbot. Nothing like terse enough. ;-)</p>
<p>I really never saw the point in Groovey. What does it promise to deliver that Jython doesn&#8217;t already give you?</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Ryan Tomayko</title>
		<link>http://lesscode.org/2005/07/17/rails-django-compared/#comment-104</link>
		<pubDate>Thu, 21 Jul 2005 04:32:32 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/17/rails-django-compared/#comment-104</guid>
					<description>&lt;blockquote&gt;
  &lt;p&gt;More FUD about .NET and Mono from Fredrik Lundh, who makes money from python software.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Doug: while I can't be sure, I don't think that was Fredrik Lundh. My understanding of Lundh's general development philosophy is that he's decidedly anti-framework, and there are a whole lot of other Fredriks in the world besides.&lt;/p&gt;

&lt;p&gt;As for Boo and Groovy, I do hope they work out because I would like nothing more than to see dynamic languages take over the mainstream VMs but I've seen little to suggest that they provide the level of quality, performance, or community backing of the C based interpreters.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<blockquote>
<p>More FUD about .NET and Mono from Fredrik Lundh, who makes money from python software.</p>
</blockquote>
<p>Doug: while I can&#8217;t be sure, I don&#8217;t think that was Fredrik Lundh. My understanding of Lundh&#8217;s general development philosophy is that he&#8217;s decidedly anti-framework, and there are a whole lot of other Fredriks in the world besides.</p>
<p>As for Boo and Groovy, I do hope they work out because I would like nothing more than to see dynamic languages take over the mainstream VMs but I&#8217;ve seen little to suggest that they provide the level of quality, performance, or community backing of the C based interpreters.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: DougHolton</title>
		<link>http://lesscode.org/2005/07/17/rails-django-compared/#comment-103</link>
		<pubDate>Thu, 21 Jul 2005 03:33:01 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/17/rails-django-compared/#comment-103</guid>
					<description>&lt;p&gt;More FUD about .NET and Mono from Fredrik Lundh, who makes money from python software.&lt;/p&gt;

&lt;p&gt;Yes, MonoRail (for .NET &amp;#38; Mono) and Trails (for Java and the Java VM) are nowhere near as easy to use as Ruby on Rails or Django.  But they are the only options, and there is hope to making them much much easier to use than even Django by combining them with new languages for .NET and JVM that have a lot more flexibility than java or C#, such as groovy (http://groovy.codehaus.org/) and boo (http://boo.codehaus.org/) for .NET/Mono and IronPython (now owned by Microsoft).&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>More FUD about .NET and Mono from Fredrik Lundh, who makes money from python software.</p>
<p>Yes, MonoRail (for .NET &amp; Mono) and Trails (for Java and the Java VM) are nowhere near as easy to use as Ruby on Rails or Django.  But they are the only options, and there is hope to making them much much easier to use than even Django by combining them with new languages for .NET and JVM that have a lot more flexibility than java or C#, such as groovy (http://groovy.codehaus.org/) and boo (http://boo.codehaus.org/) for .NET/Mono and IronPython (now owned by Microsoft).</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Matthew Marshall</title>
		<link>http://lesscode.org/2005/07/17/rails-django-compared/#comment-86</link>
		<pubDate>Mon, 18 Jul 2005 23:41:26 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/17/rails-django-compared/#comment-86</guid>
					<description>&lt;p&gt;Jeff Shell:&lt;/p&gt;

&lt;p&gt;Something you need to note, is that while subway is an attempt to copy Rails, Django is not.  In fact, I believe Django pre-dates Rails.&lt;/p&gt;

&lt;p&gt;MWM&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Jeff Shell:</p>
<p>Something you need to note, is that while subway is an attempt to copy Rails, Django is not.  In fact, I believe Django pre-dates Rails.</p>
<p>MWM</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Simon Willison</title>
		<link>http://lesscode.org/2005/07/17/rails-django-compared/#comment-83</link>
		<pubDate>Mon, 18 Jul 2005 16:55:55 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/17/rails-django-compared/#comment-83</guid>
					<description>&lt;p&gt;The reason Django is getting more attention than Subway right now (apart from the new-ness factor) is simple: Django, like Rails, was extracted from existing applications. It's tried and tested - a bunch of reasonably high traffic sites have been running Django for nearly two years. I haven't year heard of any &quot;real&quot; sites running Subway - they started with the framework.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>The reason Django is getting more attention than Subway right now (apart from the new-ness factor) is simple: Django, like Rails, was extracted from existing applications. It&#8217;s tried and tested - a bunch of reasonably high traffic sites have been running Django for nearly two years. I haven&#8217;t year heard of any &#8220;real&#8221; sites running Subway - they started with the framework.</p>
]]></content:encoded>
				</item>
</channel>
</rss>

<!-- Dynamic Page Served (once) in 0.340 seconds -->
<!-- Cached page served by WP-Cache -->
