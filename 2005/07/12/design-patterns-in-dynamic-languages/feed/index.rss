<?xml version="1.0" encoding="UTF-8"?><!-- generator="wordpress/2.0.1" -->
<rss version="2.0" 
	xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
	<title>Comments on: Design Patterns in Dynamic Languages?</title>
	<link>http://lesscode.org/2005/07/12/design-patterns-in-dynamic-languages/</link>
	<description>AAaaaaahhhhrrrrrrr!</description>
	<pubDate>Mon, 17 Sep 2007 05:14:05 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.0.1</generator>

	<item>
		<title>by: Freedom vs. Safety [@lesscode.org]</title>
		<link>http://lesscode.org/2005/07/12/design-patterns-in-dynamic-languages/#comment-285</link>
		<pubDate>Thu, 25 Aug 2005 18:38:49 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/12/design-patterns-in-dynamic-languages/#comment-285</guid>
					<description>&lt;p&gt;[...] The advocates of freedom languages tend to talk first about the speed and efficiency of the individual programmer. They discuss the expressive power of different constructs and focus on all the powerful features that the safety languages lack. They point out complex patterns and show off twenty-line systems that do the same thing. They talk more about the ease or purity of things than the safety of things. They are dismissive of static-type-safety and compile-time validation in general. [...]&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>[&#8230;] The advocates of freedom languages tend to talk first about the speed and efficiency of the individual programmer. They discuss the expressive power of different constructs and focus on all the powerful features that the safety languages lack. They point out complex patterns and show off twenty-line systems that do the same thing. They talk more about the ease or purity of things than the safety of things. They are dismissive of static-type-safety and compile-time validation in general. [&#8230;]</p>
]]></content:encoded>
				</item>
</channel>
</rss>

<!-- Dynamic Page Served (once) in 0.239 seconds -->
<!-- Cached page served by WP-Cache -->
