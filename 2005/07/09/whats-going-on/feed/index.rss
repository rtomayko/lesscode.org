<?xml version="1.0" encoding="UTF-8"?><!-- generator="wordpress/2.0.1" -->
<rss version="2.0" 
	xmlns:content="http://purl.org/rss/1.0/modules/content/">
<channel>
	<title>Comments on: What the hell is going on here?</title>
	<link>http://lesscode.org/2005/07/09/whats-going-on/</link>
	<description>AAaaaaahhhhrrrrrrr!</description>
	<pubDate>Mon, 17 Sep 2007 09:13:21 +0000</pubDate>
	<generator>http://wordpress.org/?v=2.0.1</generator>

	<item>
		<title>by: Aristotle Pagaltzis</title>
		<link>http://lesscode.org/2005/07/09/whats-going-on/#comment-3684</link>
		<pubDate>Sat, 10 Jun 2006 23:20:06 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/09/whats-going-on/#comment-3684</guid>
					<description>&lt;p&gt;Eric: &lt;a href=&quot;http://www.jwz.org/&quot; rel=&quot;&quot;&gt;some people&lt;/a&gt; would argue that throwing away all of the old codebase set the project back for years and allowed &lt;a href=&quot;http://www.microsoft.com/&quot; rel=&quot;&quot;&gt;the competition&lt;/a&gt; to eats its lunch… &lt;a href=&quot;http://www.apple.com/&quot; rel=&quot;&quot;&gt;others yet&lt;/a&gt; would argue the new codebase is byzantine.&lt;/p&gt;

&lt;p&gt;We have big brains, but we have proven ourselves notoriously incapable of predicting emergent behaviour in complex systems correctly.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Eric: <a href="http://www.jwz.org/" rel="">some people</a> would argue that throwing away all of the old codebase set the project back for years and allowed <a href="http://www.microsoft.com/" rel="">the competition</a> to eats its lunch… <a href="http://www.apple.com/" rel="">others yet</a> would argue the new codebase is byzantine.</p>
<p>We have big brains, but we have proven ourselves notoriously incapable of predicting emergent behaviour in complex systems correctly.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: Eric Hawthorne</title>
		<link>http://lesscode.org/2005/07/09/whats-going-on/#comment-3682</link>
		<pubDate>Sat, 10 Jun 2006 21:33:03 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/09/whats-going-on/#comment-3682</guid>
					<description>&lt;p&gt;Re: the theory that great software is evolutionary and not  &quot;intelligently designed.&quot; Ok so let's take the case of Netscape Communicator. It did its job, browsing the web, but due to its rapidly executed, agile evolution, it turned into a large hairball of software. Starting over again with Mozilla then firefox was really saying. Look. We have to have some strong software architectural and design principles if we're going to create a sustainable, extensible code base next time round. That wasn't achieved by blind evolutionary luck, but by some intensive, careful thinking by a few folks upfront. Designing is achieving simple and elegant solutions to multi-constraint problems, by applying&lt;/p&gt;

&lt;ol&gt;&lt;li&gt;careful, wide-ranging associative and analogizing thought, 
&lt;/li&gt;&lt;li&gt;dialectic discussions, AND 
&lt;/li&gt;&lt;li&gt;experimentation. 
&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;The &quot;code evolution&quot; path you seem to advocate amounts to favoring only the last of these three methods of designing and realizing good code. It amounts to saying: It's too hard to think (imagine, model) a lot up front, and it's too hard to communicate about these models in design-language-and-pictures, so I'll just code, then you'll see. A judicious mix of all three methods will work better in the long run. We have big brains people, let's use them.&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>Re: the theory that great software is evolutionary and not  &#8220;intelligently designed.&#8221; Ok so let&#8217;s take the case of Netscape Communicator. It did its job, browsing the web, but due to its rapidly executed, agile evolution, it turned into a large hairball of software. Starting over again with Mozilla then firefox was really saying. Look. We have to have some strong software architectural and design principles if we&#8217;re going to create a sustainable, extensible code base next time round. That wasn&#8217;t achieved by blind evolutionary luck, but by some intensive, careful thinking by a few folks upfront. Designing is achieving simple and elegant solutions to multi-constraint problems, by applying</p>
<ol>
<li>careful, wide-ranging associative and analogizing thought,
</li>
<li>dialectic discussions, AND
</li>
<li>experimentation.
</li>
</ol>
<p>The &#8220;code evolution&#8221; path you seem to advocate amounts to favoring only the last of these three methods of designing and realizing good code. It amounts to saying: It&#8217;s too hard to think (imagine, model) a lot up front, and it&#8217;s too hard to communicate about these models in design-language-and-pictures, so I&#8217;ll just code, then you&#8217;ll see. A judicious mix of all three methods will work better in the long run. We have big brains people, let&#8217;s use them.</p>
]]></content:encoded>
				</item>
	<item>
		<title>by: David O'Hara</title>
		<link>http://lesscode.org/2005/07/09/whats-going-on/#comment-29</link>
		<pubDate>Mon, 11 Jul 2005 14:41:56 +0000</pubDate>
		<guid>http://lesscode.org/2005/07/09/whats-going-on/#comment-29</guid>
					<description>&lt;p&gt;After reading thru more of your posts via what I assume to be your &lt;a href=&quot;http://naeblis.cx/rtomayko/&quot; title=&quot;Ryan Tomayko&quot; rel=&quot;nofollow&quot;&gt;personal blog&lt;/a&gt;, I have a much better understanding of what you're pushing for here and I have to say that I'm in agreement. I have had several conversations with co-workers and associates around some of the ideas and I understand that you're not breaking new ground here, but since I've never been on it, it's new ground to me. :) Since I'm basically a .NET guy, my knowledge of technologies such as PHP and Ruby are minimal (but I'm learning them) and I have pretty much no idea what Python is about - other than it's a language and the files end in py. ;) I do understand though that what you're after is a fundamental change in paradigms - utilization of what we've got right now in the most (more?) effective manner for the issues of right now. The tools that we have aren’t broken; they’re simply being using in a wrong or suboptimal fashion. And that, my friend, is of great interest. Keep up the great work and I look forward to future discussions.
(Sorry if I get a little long winded but my &quot;wheels&quot; are turning...)&lt;/p&gt;
</description>
		<content:encoded><![CDATA[<p>After reading thru more of your posts via what I assume to be your <a href="http://naeblis.cx/rtomayko/" title="Ryan Tomayko">personal blog</a>, I have a much better understanding of what you&#8217;re pushing for here and I have to say that I&#8217;m in agreement. I have had several conversations with co-workers and associates around some of the ideas and I understand that you&#8217;re not breaking new ground here, but since I&#8217;ve never been on it, it&#8217;s new ground to me. :) Since I&#8217;m basically a .NET guy, my knowledge of technologies such as PHP and Ruby are minimal (but I&#8217;m learning them) and I have pretty much no idea what Python is about - other than it&#8217;s a language and the files end in py. ;) I do understand though that what you&#8217;re after is a fundamental change in paradigms - utilization of what we&#8217;ve got right now in the most (more?) effective manner for the issues of right now. The tools that we have aren’t broken; they’re simply being using in a wrong or suboptimal fashion. And that, my friend, is of great interest. Keep up the great work and I look forward to future discussions.<br />
(Sorry if I get a little long winded but my &#8220;wheels&#8221; are turning&#8230;)</p>
]]></content:encoded>
				</item>
</channel>
</rss>

<!-- Dynamic Page Served (once) in 0.700 seconds -->
<!-- Cached page served by WP-Cache -->
